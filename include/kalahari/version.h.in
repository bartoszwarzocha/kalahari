/// @file version.h
/// @brief Kalahari version information
///
/// This file is auto-generated by CMake from version.h.in
/// DO NOT EDIT THIS FILE DIRECTLY - edit version.h.in instead

#pragma once

namespace kalahari {

/// Project version string (MAJOR.MINOR.PATCH)
constexpr const char* VERSION = "@PROJECT_VERSION@";

/// Major version number
constexpr int VERSION_MAJOR = @PROJECT_VERSION_MAJOR@;

/// Minor version number
constexpr int VERSION_MINOR = @PROJECT_VERSION_MINOR@;

/// Patch version number
constexpr int VERSION_PATCH = @PROJECT_VERSION_PATCH@;

/// Build type (Debug/Release/RelWithDebInfo/MinSizeRel)
constexpr const char* BUILD_TYPE = "@CMAKE_BUILD_TYPE@";

/// Project description
constexpr const char* DESCRIPTION = "@PROJECT_DESCRIPTION@";

/// C++ compiler used
constexpr const char* COMPILER = "@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@";

/// Platform macros for conditional compilation
#if defined(KALAHARI_PLATFORM_WINDOWS)
    constexpr const char* PLATFORM = "Windows";
#elif defined(KALAHARI_PLATFORM_MACOS)
    constexpr const char* PLATFORM = "macOS";
#elif defined(KALAHARI_PLATFORM_LINUX)
    constexpr const char* PLATFORM = "Linux";
#else
    constexpr const char* PLATFORM = "Unknown";
#endif

} // namespace kalahari
