name: LINUX

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Linux Build & Test
    runs-on: ubuntu-latest
    timeout-minutes: 90  # Prevent runaway builds

    strategy:
      matrix:
        build_type: [Debug, Release]
      fail-fast: false  # Don't cancel other jobs if one fails

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          linux-libc-dev \
          libgtk-3-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libnotify-dev \
          libsm-dev \
          libwebkit2gtk-4.1-dev \
          libltdl-dev

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          vcpkg
          build/vcpkg_installed
        key: linux-gcc-vcpkg-v3-${{ hashFiles('vcpkg.json') }}-${{ matrix.build_type }}
        restore-keys: |
          linux-gcc-vcpkg-v3-${{ hashFiles('vcpkg.json') }}-
          linux-gcc-vcpkg-v3-

    - name: Bootstrap vcpkg
      run: |
        if [ ! -f vcpkg/vcpkg ]; then
          echo "Bootstrapping vcpkg..."
          cd vcpkg
          ./bootstrap-vcpkg.sh
        else
          echo "vcpkg already bootstrapped (from cache or previous run)"
          vcpkg/vcpkg version
        fi

    - name: Verify build tools
      run: |
        echo "=== Checking build tools ==="
        which ninja || echo "ERROR: ninja not found!"
        which g++ || echo "ERROR: g++ not found!"
        which cmake || echo "ERROR: cmake not found!"
        ninja --version
        g++ --version | head -1
        cmake --version | head -1

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja \
          -G Ninja

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }} --parallel

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${{ matrix.build_type }}

    - name: Upload binaries (Release only)
      if: matrix.build_type == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: kalahari-linux-${{ matrix.build_type }}
        path: |
          build/bin/kalahari*
        retention-days: 7
