name: MACOS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: macOS Build & Test
    runs-on: macos-latest
    timeout-minutes: 90  # Prevent runaway builds

    strategy:
      matrix:
        build_type: [Debug, Release]
      fail-fast: false  # Don't cancel other jobs if one fails

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        brew install cmake ninja autoconf autoconf-archive automake libtool

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          vcpkg
          build/vcpkg_installed
        key: macos-clang-vcpkg-v3-${{ hashFiles('vcpkg.json') }}-${{ matrix.build_type }}
        restore-keys: |
          macos-clang-vcpkg-v3-${{ hashFiles('vcpkg.json') }}-
          macos-clang-vcpkg-v3-

    - name: Bootstrap vcpkg
      run: |
        if [ ! -f vcpkg/vcpkg ]; then
          echo "Bootstrapping vcpkg..."
          cd vcpkg
          ./bootstrap-vcpkg.sh
        else
          echo "vcpkg already bootstrapped (from cache or previous run)"
          vcpkg/vcpkg version
        fi

    - name: Configure CMake
      run: |
        # Point CMake to Python 3.11 from actions/setup-python (not Homebrew 3.12)
        PYTHON_ROOT=$(python3 -c "import sys; print(sys.prefix)")
        echo "Using Python from: $PYTHON_ROOT"

        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DPython3_ROOT_DIR="$PYTHON_ROOT" \
          -G Ninja

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }} --parallel

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${{ matrix.build_type }}

    - name: Upload binaries (Release only)
      if: matrix.build_type == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: kalahari-macos-${{ matrix.build_type }}
        path: |
          build/bin/kalahari*
        retention-days: 7
